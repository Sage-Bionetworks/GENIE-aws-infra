AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Batch jobs for Genie validation.

Parameters:
  ComputeImageId:
    Description: The Genie compute resource image ID
    Type: 'AWS::EC2::Image::Id'
  DevComputeImageId:
    Description: The develop Genie compute resource image ID
    Type: 'AWS::EC2::Image::Id'
  MainImage:
    Description: The Genie main processing and validation docker container image
    Type: String
  Department:
    Description: 'The department for this resource'
    Type: String
    AllowedPattern: '^\S*$'
    ConstraintDescription: 'Must be string with no spaces'
  Project:
    Description: 'The name of the project that this resource is used for'
    Type: String
    AllowedPattern: '^\S*$'
    ConstraintDescription: 'Must be string with no spaces'
  OwnerEmail:
    Description: 'Email address of the owner of this resource'
    Type: String
    AllowedPattern: '^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$'
    ConstraintDescription: 'Must be an acceptable email address syntax(i.e. joe.smith@sagebase.org)'
  ParkMyCloudManaged:
    Description: Allow ParkMyCloud service to start/stop resources
    Type: String
    Default: 'yes'

Resources:
  MyCloudWatchLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 365

  PublishToCloudwatchPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
              - 'logs:DescribeLogGroups'
            Resource: !GetAtt MyCloudWatchLogGroup.Arn
      Roles:
        - !Ref BatchInstanceRole

  JobFailedAlertTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Protocol: email
          Endpoint: !Ref OwnerEmail

  JobFailedEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "Event rule for failed jobs."
      EventPattern:
        source:
          - "aws.batch"
        detail-type:
          - "Batch Job State Change"
        detail:
          status:
            - "FAILED"
          jobQueue:
            - !Ref BatchJobQueue
      State: "ENABLED"
      Targets:
        -
          Arn: !Ref JobFailedAlertTopic
          Id: !Sub '${AWS::StackName}-FailedBatchJob-daily'

  EventTopicPolicy:
    Type: 'AWS::SNS::TopicPolicy'
    Properties:
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: 'sns:Publish'
            Resource: '*'
      Topics:
        - !Ref JobFailedAlertTopic

  PermissionForEventsToInvokeBatch:
    Type: "AWS::IAM::Role"
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSBatchServiceEventTargetRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: "/"

  ScheduledRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "ScheduledRule"
      ScheduleExpression: "rate(1 day)"
      State: "ENABLED"
      Targets:
        -
          Arn: !Ref BatchJobQueue
          Id: !Sub '${AWS::StackName}-job-validation'
          RoleArn: !GetAtt PermissionForEventsToInvokeBatch.Arn
          BatchParameters:
            JobDefinition: !Ref ValidationBatchJob
            JobName: !Sub '${AWS::StackName}-job-validation'

  BatchServiceRole:
    Type: "AWS::IAM::Role"
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole
        - !Ref PublishToCloudwatchPolicy
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: batch.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: "/"
  BatchInstanceRole:
    Type: "AWS::IAM::Role"
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: "/"
  BatchInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
        - !Ref BatchInstanceRole
  BatchComputeEnvironment:
    Type: "AWS::Batch::ComputeEnvironment"
    Properties:
      Type: MANAGED
      ServiceRole: !GetAtt BatchServiceRole.Arn
      State: ENABLED
      ComputeResources:
        Type: EC2
        MaxvCpus: 256
        SecurityGroupIds:
          - !ImportValue us-east-1-computevpc-VpnSecurityGroup
        Subnets:
          - !ImportValue us-east-1-computevpc-PrivateSubnet
          - !ImportValue us-east-1-computevpc-PrivateSubnet1
          - !ImportValue us-east-1-computevpc-PrivateSubnet2
        MinvCpus: 0
        ImageId: !Ref ComputeImageId
        InstanceRole: !GetAtt BatchInstanceProfile.Arn
        InstanceTypes:
          - optimal
        DesiredvCpus: 8
        Tags:
          "parkmycloud": !Ref ParkMyCloudManaged
          "Name": !Sub '${AWS::StackName}-BatchComputeEnvironment'
          "Department": !Ref Department
          "Project": !Ref Project
          "OwnerEmail": !Ref OwnerEmail
  DevBatchComputeEnvironment:
    Type: "AWS::Batch::ComputeEnvironment"
    Properties:
      Type: MANAGED
      ServiceRole: !GetAtt BatchServiceRole.Arn
      State: ENABLED
      ComputeResources:
        Type: EC2
        MaxvCpus: 256
        SecurityGroupIds:
          - !ImportValue us-east-1-computevpc-VpnSecurityGroup
        Subnets:
          - !ImportValue us-east-1-computevpc-PrivateSubnet
          - !ImportValue us-east-1-computevpc-PrivateSubnet1
          - !ImportValue us-east-1-computevpc-PrivateSubnet2
        MinvCpus: 0
        ImageId: !Ref DevComputeImageId
        InstanceRole: !GetAtt BatchInstanceProfile.Arn
        InstanceTypes:
          - optimal
        DesiredvCpus: 8
        Tags:
          "parkmycloud": !Ref ParkMyCloudManaged
          "Name": !Sub '${AWS::StackName}-DevBatchComputeEnvironment'
          "Department": !Ref Department
          "Project": !Ref Project
          "OwnerEmail": !Ref OwnerEmail
  BatchJobQueue:
    Type: "AWS::Batch::JobQueue"
    Properties:
      JobQueueName: !Join
        - '-'
        - - !Ref AWS::StackName
          - "job"
          - "queue"
      ComputeEnvironmentOrder:
        - ComputeEnvironment: !Ref BatchComputeEnvironment
          Order: 1
      Priority: 1
      State: ENABLED
  DevBatchJobQueue:
    Type: "AWS::Batch::JobQueue"
    Properties:
      JobQueueName: !Join
        - '-'
        - - !Ref AWS::StackName
          - "dev"
          - "job"
          - "queue"
      ComputeEnvironmentOrder:
        - ComputeEnvironment: !Ref DevBatchComputeEnvironment
          Order: 1
      Priority: 1
      State: ENABLED
  ReleaseGenieBatchJob:
    Type: 'AWS::Batch::JobDefinition'
    Properties:
      Type: container
      JobDefinitionName: !Join
        - '-'
        - - !Ref AWS::StackName
          - "job"
          - "release"
      ContainerProperties:
        Image: !Ref MainImage
        Vcpus: 4
        Memory: 16000
        Command:
          - python3
          - bin/database_to_staging.py
          - Jul-2020
          - /root/cbioportal
          - 9.1-consortium
          - --pemFile
          - /root/.ssh/genie.pem
        Volumes:
          - Host:
              SourcePath: "/home/ec2-user/.ssh/genie.pem"
            Name: geniePem
          - Host:
              SourcePath: "/home/ec2-user/.synapseCache"
            Name: synapsecache
        Environment:
          - Name: GENIE_PASS
            Value: (b'\x1b\x1f\xc8\xdb\x9f\x03\x0c\xf6\xd4\x95NI\x06\x97e\xda\x88i~\x89\x9a"\x19ON\x8c\x01\x9a\xb4\xaat\x970\xb0\xeel\xae\t\'\xdb\xf3XUQw\xdb\xe7\x11\xd3\x0bf\xc6\xaf\xae\x11\xe2\xa9W\x8b\x08\xcb\x92\xc5\x8f3-\xf8\x92[\x8b\xb8\xe0\xcc\x87\xc09\xa5\rw\x03\xbc\xa4\xa6Y\xa1\x87\x8d\xe6G\xba5\xbb\xa4\x84xl\xba\xa1\x05\xa6\xc7\x1d&N>\xb7\xf0\x1b\x19#E\xb1\xd5\xaf\xc3\xafU,\xfbb\x95\x9df\xeb\xfe&\x0f\xaa',)
          - Name: GENIE_USER
            Value: genieRunner
        MountPoints:
          - ContainerPath: "/root/.ssh/genie.pem"
            ReadOnly: false
            SourceVolume: geniePem
          - ContainerPath: "/root/.synapseCache"
            ReadOnly: false
            SourceVolume: synapsecache
      Timeout:
        AttemptDurationSeconds: 345600
  PublicReleaseGenieBatchJob:
    Type: 'AWS::Batch::JobDefinition'
    Properties:
      Type: container
      JobDefinitionName: !Join
        - '-'
        - - !Ref AWS::StackName
          - "job"
          - "publicrelease"
      ContainerProperties:
        Image: !Ref MainImage
        Vcpus: 4
        Memory: 16000
        Command:
          - python3
          - bin/consortium_to_public.py
          - Jan-2021
          - /root/cbioportal
          - 9.0-public
          - --pemFile
          - /root/.ssh/genie.pem
        Volumes:
          - Host:
              SourcePath: "/home/ec2-user/.ssh/genie.pem"
            Name: geniePem
          - Host:
              SourcePath: "/home/ec2-user/.synapseCache"
            Name: synapsecache
        Environment:
          - Name: GENIE_PASS
            Value: (b'\x1b\x1f\xc8\xdb\x9f\x03\x0c\xf6\xd4\x95NI\x06\x97e\xda\x88i~\x89\x9a"\x19ON\x8c\x01\x9a\xb4\xaat\x970\xb0\xeel\xae\t\'\xdb\xf3XUQw\xdb\xe7\x11\xd3\x0bf\xc6\xaf\xae\x11\xe2\xa9W\x8b\x08\xcb\x92\xc5\x8f3-\xf8\x92[\x8b\xb8\xe0\xcc\x87\xc09\xa5\rw\x03\xbc\xa4\xa6Y\xa1\x87\x8d\xe6G\xba5\xbb\xa4\x84xl\xba\xa1\x05\xa6\xc7\x1d&N>\xb7\xf0\x1b\x19#E\xb1\xd5\xaf\xc3\xafU,\xfbb\x95\x9df\xeb\xfe&\x0f\xaa',)
          - Name: GENIE_USER
            Value: genieRunner
        MountPoints:
          - ContainerPath: "/root/.ssh/genie.pem"
            ReadOnly: false
            SourceVolume: geniePem
          - ContainerPath: "/root/.synapseCache"
            ReadOnly: false
            SourceVolume: synapsecache
      Timeout:
        AttemptDurationSeconds: 345600
  ValidationBatchJob:
    Type: 'AWS::Batch::JobDefinition'
    Properties:
      Type: container
      JobDefinitionName: !Join
        - '-'
        - - !Ref AWS::StackName
          - "job"
          - "validation"
      ContainerProperties:
        Image: !Ref MainImage
        Vcpus: 4
        Memory: 16000
        Command:
          - python3
          - bin/input_to_database.py
          - mutation
          - --pemFile
          - /root/.ssh/genie.pem
          - --onlyValidate
          - --project_id
          - syn3380222
        Volumes:
          - Host:
              SourcePath: "/home/ec2-user/.ssh/genie.pem"
            Name: geniePem
          - Host:
              SourcePath: "/home/ec2-user/.synapseCache"
            Name: synapsecache
        Environment:
          - Name: GENIE_PASS
            Value: (b'\x1b\x1f\xc8\xdb\x9f\x03\x0c\xf6\xd4\x95NI\x06\x97e\xda\x88i~\x89\x9a"\x19ON\x8c\x01\x9a\xb4\xaat\x970\xb0\xeel\xae\t\'\xdb\xf3XUQw\xdb\xe7\x11\xd3\x0bf\xc6\xaf\xae\x11\xe2\xa9W\x8b\x08\xcb\x92\xc5\x8f3-\xf8\x92[\x8b\xb8\xe0\xcc\x87\xc09\xa5\rw\x03\xbc\xa4\xa6Y\xa1\x87\x8d\xe6G\xba5\xbb\xa4\x84xl\xba\xa1\x05\xa6\xc7\x1d&N>\xb7\xf0\x1b\x19#E\xb1\xd5\xaf\xc3\xafU,\xfbb\x95\x9df\xeb\xfe&\x0f\xaa',)
          - Name: GENIE_USER
            Value: genieRunner
        MountPoints:
          - ContainerPath: "/root/.ssh/genie.pem"
            ReadOnly: false
            SourceVolume: geniePem
          - ContainerPath: "/root/.synapseCache"
            ReadOnly: false
            SourceVolume: synapsecache
      Timeout:
        AttemptDurationSeconds: 18000
  MainProcessingBatchJob:
    Type: 'AWS::Batch::JobDefinition'
    Properties:
      Type: container
      JobDefinitionName: !Join
        - '-'
        - - !Ref AWS::StackName
          - "job"
          - "mainprocess"
      ContainerProperties:
        Image: !Ref MainImage
        Vcpus: 8
        Memory: 16000
        Command:
          - python3
          - bin/input_to_database.py
          - main
          - --pemFile
          - /root/.ssh/genie.pem
          - --project_id
          - syn3380222
        Volumes:
          - Host:
              SourcePath: "/home/ec2-user/.ssh/genie.pem"
            Name: geniePem
          - Host:
              SourcePath: "/home/ec2-user/.synapseCache"
            Name: synapsecache
        Environment:
          - Name: GENIE_PASS
            Value: (b'\x1b\x1f\xc8\xdb\x9f\x03\x0c\xf6\xd4\x95NI\x06\x97e\xda\x88i~\x89\x9a"\x19ON\x8c\x01\x9a\xb4\xaat\x970\xb0\xeel\xae\t\'\xdb\xf3XUQw\xdb\xe7\x11\xd3\x0bf\xc6\xaf\xae\x11\xe2\xa9W\x8b\x08\xcb\x92\xc5\x8f3-\xf8\x92[\x8b\xb8\xe0\xcc\x87\xc09\xa5\rw\x03\xbc\xa4\xa6Y\xa1\x87\x8d\xe6G\xba5\xbb\xa4\x84xl\xba\xa1\x05\xa6\xc7\x1d&N>\xb7\xf0\x1b\x19#E\xb1\xd5\xaf\xc3\xafU,\xfbb\x95\x9df\xeb\xfe&\x0f\xaa',)
          - Name: GENIE_USER
            Value: genieRunner
        MountPoints:
          - ContainerPath: "/root/.ssh/genie.pem"
            ReadOnly: false
            SourceVolume: geniePem
          - ContainerPath: "/root/.synapseCache"
            ReadOnly: false
            SourceVolume: synapsecache
      Timeout:
        AttemptDurationSeconds: 259200
  MafBatchJob:
    Type: 'AWS::Batch::JobDefinition'
    Properties:
      Type: container
      JobDefinitionName: !Join
        - '-'
        - - !Ref AWS::StackName
          - "job"
          - "mafprocess"
      ContainerProperties:
        Image: !Ref MainImage
        Vcpus: 8
        Memory: 40000
        Command:
          - python3
          - bin/input_to_database.py
          - mutation
          - --pemFile
          - /root/.ssh/genie.pem
          - --genie_annotation_pkg
          - /root/annotation-tools
          - --project_id
          - syn3380222
          - --createNewMafDatabase
        Volumes:
          - Host:
              SourcePath: "/home/ec2-user/.ssh/genie.pem"
            Name: geniePem
          - Host:
              SourcePath: "/home/ec2-user/.synapseCache"
            Name: synapsecache
        Environment:
          - Name: GENIE_PASS
            Value: (b'\x1b\x1f\xc8\xdb\x9f\x03\x0c\xf6\xd4\x95NI\x06\x97e\xda\x88i~\x89\x9a"\x19ON\x8c\x01\x9a\xb4\xaat\x970\xb0\xeel\xae\t\'\xdb\xf3XUQw\xdb\xe7\x11\xd3\x0bf\xc6\xaf\xae\x11\xe2\xa9W\x8b\x08\xcb\x92\xc5\x8f3-\xf8\x92[\x8b\xb8\xe0\xcc\x87\xc09\xa5\rw\x03\xbc\xa4\xa6Y\xa1\x87\x8d\xe6G\xba5\xbb\xa4\x84xl\xba\xa1\x05\xa6\xc7\x1d&N>\xb7\xf0\x1b\x19#E\xb1\xd5\xaf\xc3\xafU,\xfbb\x95\x9df\xeb\xfe&\x0f\xaa',)
          - Name: GENIE_USER
            Value: genieRunner
        MountPoints:
          - ContainerPath: "/root/.ssh/genie.pem"
            ReadOnly: false
            SourceVolume: geniePem
          - ContainerPath: "/root/.synapseCache"
            ReadOnly: false
            SourceVolume: synapsecache
      Timeout:
        AttemptDurationSeconds: 345600
Outputs:
  MyCloudWatchLogGroup:
    Value: !Ref MyCloudWatchLogGroup
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-CloudWatchLogGroup'
  BatchComputeEnvironment:
    Value: !Ref BatchComputeEnvironment
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-BatchComputeEnvironment'
  DevBatchComputeEnvironment:
    Value: !Ref DevBatchComputeEnvironment
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-DevBatchComputeEnvironment'
  BatchJobQueue:
    Value: !Ref BatchJobQueue
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-BatchJobQueue'
  DevBatchJobQueue:
    Value: !Ref DevBatchJobQueue
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-DevBatchJobQueue'
  ValidationBatchJob:
    Value: !Ref ValidationBatchJob
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-ValidationBatchJob'
  ReleaseGenieBatchJob:
    Value: !Ref ReleaseGenieBatchJob
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-ReleaseGenieBatchJob'
  MainProcessingBatchJob:
    Value: !Ref MainProcessingBatchJob
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-MainProcessingBatchJob'
  MafBatchJob:
    Value: !Ref MafBatchJob
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-MafBatchJob'
